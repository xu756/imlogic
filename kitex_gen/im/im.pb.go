// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.2
// source: idl/im.proto

package im

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 聊天类型
type ChatType int32

const (
	// 私聊 （处理私聊消息）
	ChatType_PrivateChat ChatType = 0
	// 群聊 （处理群聊消息）
	ChatType_GroupChat ChatType = 1
	// 系统消息 （接收）
	ChatType_SystemMessage ChatType = 2
	// 系统通知 （接收）
	ChatType_SystemNotice ChatType = 3
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "PrivateChat",
		1: "GroupChat",
		2: "SystemMessage",
		3: "SystemNotice",
	}
	ChatType_value = map[string]int32{
		"PrivateChat":   0,
		"GroupChat":     1,
		"SystemMessage": 2,
		"SystemNotice":  3,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_im_proto_enumTypes[0].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_idl_im_proto_enumTypes[0]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{0}
}

// 消息类型
type MsgType int32

const (
	MsgType_Text  MsgType = 0
	MsgType_Image MsgType = 1
	MsgType_File  MsgType = 2
	MsgType_Audio MsgType = 3
	MsgType_Video MsgType = 4
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "Text",
		1: "Image",
		2: "File",
		3: "Audio",
		4: "Video",
	}
	MsgType_value = map[string]int32{
		"Text":  0,
		"Image": 1,
		"File":  2,
		"Audio": 3,
		"Video": 4,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_im_proto_enumTypes[1].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_idl_im_proto_enumTypes[1]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{1}
}

// websocket状态
type WsStatus int32

const (
	WsStatus_Connect    WsStatus = 0
	WsStatus_Disconnect WsStatus = 1
	WsStatus_Heartbeat  WsStatus = 2
)

// Enum value maps for WsStatus.
var (
	WsStatus_name = map[int32]string{
		0: "Connect",
		1: "Disconnect",
		2: "Heartbeat",
	}
	WsStatus_value = map[string]int32{
		"Connect":    0,
		"Disconnect": 1,
		"Heartbeat":  2,
	}
)

func (x WsStatus) Enum() *WsStatus {
	p := new(WsStatus)
	*p = x
	return p
}

func (x WsStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WsStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_im_proto_enumTypes[2].Descriptor()
}

func (WsStatus) Type() protoreflect.EnumType {
	return &file_idl_im_proto_enumTypes[2]
}

func (x WsStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WsStatus.Descriptor instead.
func (WsStatus) EnumDescriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{2}
}

// 媒体类型
type MediaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MediaType) Reset() {
	*x = MediaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaType) ProtoMessage() {}

func (x *MediaType) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaType.ProtoReflect.Descriptor instead.
func (*MediaType) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{0}
}

func (x *MediaType) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MediaType) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 元消息
type MetaMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId   string   `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	UserId   int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status   WsStatus `protobuf:"varint,3,opt,name=status,proto3,enum=im.WsStatus" json:"status,omitempty"`
	HostName string   `protobuf:"bytes,4,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Device   string   `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *MetaMsg) Reset() {
	*x = MetaMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaMsg) ProtoMessage() {}

func (x *MetaMsg) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaMsg.ProtoReflect.Descriptor instead.
func (*MetaMsg) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{1}
}

func (x *MetaMsg) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *MetaMsg) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MetaMsg) GetStatus() WsStatus {
	if x != nil {
		return x.Status
	}
	return WsStatus_Connect
}

func (x *MetaMsg) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *MetaMsg) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

// 返回消息
type MessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	MsgId   string `protobuf:"bytes,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *MessageRes) Reset() {
	*x = MessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRes) ProtoMessage() {}

func (x *MessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRes.ProtoReflect.Descriptor instead.
func (*MessageRes) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{2}
}

func (x *MessageRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MessageRes) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

// 消息
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId    string       `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	MsgId     string       `protobuf:"bytes,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Timestamp int64        `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ChatType  ChatType     `protobuf:"varint,4,opt,name=chat_type,json=chatType,proto3,enum=im.ChatType" json:"chat_type,omitempty"`
	Sender    int64        `protobuf:"varint,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver  int64        `protobuf:"varint,6,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ChatId    int64        `protobuf:"varint,7,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	GroupId   int64        `protobuf:"varint,8,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Content   string       `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	MsgType   MsgType      `protobuf:"varint,10,opt,name=msg_type,json=msgType,proto3,enum=im.MsgType" json:"msg_type,omitempty"`
	Media     []*MediaType `protobuf:"bytes,11,rep,name=media,proto3" json:"media,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *Message) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_PrivateChat
}

func (x *Message) GetSender() int64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *Message) GetReceiver() int64 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *Message) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *Message) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_Text
}

func (x *Message) GetMedia() []*MediaType {
	if x != nil {
		return x.Media
	}
	return nil
}

// 发送消息给单个用户
type SendMsgTooneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId  string   `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMsgTooneReq) Reset() {
	*x = SendMsgTooneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgTooneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgTooneReq) ProtoMessage() {}

func (x *SendMsgTooneReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgTooneReq.ProtoReflect.Descriptor instead.
func (*SendMsgTooneReq) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{4}
}

func (x *SendMsgTooneReq) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *SendMsgTooneReq) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// 发送消息给多个用户
type SendMsgToGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkIds []string `protobuf:"bytes,1,rep,name=link_ids,json=linkIds,proto3" json:"link_ids,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMsgToGroupReq) Reset() {
	*x = SendMsgToGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgToGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgToGroupReq) ProtoMessage() {}

func (x *SendMsgToGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgToGroupReq.ProtoReflect.Descriptor instead.
func (*SendMsgToGroupReq) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{5}
}

func (x *SendMsgToGroupReq) GetLinkIds() []string {
	if x != nil {
		return x.LinkIds
	}
	return nil
}

func (x *SendMsgToGroupReq) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// 发送消息给多个用户失败的用户
type SendMsgToGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkIds []string `protobuf:"bytes,1,rep,name=link_ids,json=linkIds,proto3" json:"link_ids,omitempty"`
}

func (x *SendMsgToGroupRes) Reset() {
	*x = SendMsgToGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgToGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgToGroupRes) ProtoMessage() {}

func (x *SendMsgToGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_idl_im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgToGroupRes.ProtoReflect.Descriptor instead.
func (*SendMsgToGroupRes) Descriptor() ([]byte, []int) {
	return file_idl_im_proto_rawDescGZIP(), []int{6}
}

func (x *SendMsgToGroupRes) GetLinkIds() []string {
	if x != nil {
		return x.LinkIds
	}
	return nil
}

var File_idl_im_proto protoreflect.FileDescriptor

var file_idl_im_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x64, 0x6c, 0x2f, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x69, 0x6d, 0x22, 0x2f, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x57, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3d, 0x0a, 0x0a,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0xd1, 0x02, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22,
	0x51, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x55, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x2a, 0x4f, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x68, 0x61, 0x74, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x10, 0x03, 0x2a, 0x3e, 0x0a, 0x07, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x04, 0x2a, 0x36, 0x0a, 0x08, 0x57, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x10, 0x02, 0x32, 0xa7, 0x01, 0x0a, 0x09, 0x49, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x1a, 0x0e, 0x2e, 0x69,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x2e,
	0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x69, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x32, 0xb2, 0x01, 0x0a,
	0x08, 0x49, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x15, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54,
	0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x69, 0x6d, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x41,
	0x6c, 0x6c, 0x12, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x42, 0x16, 0x5a, 0x14, 0x69, 0x6d, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x6b, 0x69, 0x74,
	0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_idl_im_proto_rawDescOnce sync.Once
	file_idl_im_proto_rawDescData = file_idl_im_proto_rawDesc
)

func file_idl_im_proto_rawDescGZIP() []byte {
	file_idl_im_proto_rawDescOnce.Do(func() {
		file_idl_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_im_proto_rawDescData)
	})
	return file_idl_im_proto_rawDescData
}

var file_idl_im_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_idl_im_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_idl_im_proto_goTypes = []interface{}{
	(ChatType)(0),             // 0: im.ChatType
	(MsgType)(0),              // 1: im.MsgType
	(WsStatus)(0),             // 2: im.WsStatus
	(*MediaType)(nil),         // 3: im.MediaType
	(*MetaMsg)(nil),           // 4: im.MetaMsg
	(*MessageRes)(nil),        // 5: im.MessageRes
	(*Message)(nil),           // 6: im.Message
	(*SendMsgTooneReq)(nil),   // 7: im.SendMsgTooneReq
	(*SendMsgToGroupReq)(nil), // 8: im.SendMsgToGroupReq
	(*SendMsgToGroupRes)(nil), // 9: im.SendMsgToGroupRes
}
var file_idl_im_proto_depIdxs = []int32{
	2,  // 0: im.MetaMsg.status:type_name -> im.WsStatus
	0,  // 1: im.Message.chat_type:type_name -> im.ChatType
	1,  // 2: im.Message.msg_type:type_name -> im.MsgType
	3,  // 3: im.Message.media:type_name -> im.MediaType
	6,  // 4: im.SendMsgTooneReq.message:type_name -> im.Message
	6,  // 5: im.SendMsgToGroupReq.message:type_name -> im.Message
	4,  // 6: im.ImHandler.MetaMessage:input_type -> im.MetaMsg
	6,  // 7: im.ImHandler.HandlerPrivateMessage:input_type -> im.Message
	6,  // 8: im.ImHandler.HandlerGroupMessage:input_type -> im.Message
	7,  // 9: im.ImServer.SendMsgToOne:input_type -> im.SendMsgTooneReq
	8,  // 10: im.ImServer.SendMsgToGroup:input_type -> im.SendMsgToGroupReq
	6,  // 11: im.ImServer.SendMsgToAll:input_type -> im.Message
	5,  // 12: im.ImHandler.MetaMessage:output_type -> im.MessageRes
	5,  // 13: im.ImHandler.HandlerPrivateMessage:output_type -> im.MessageRes
	5,  // 14: im.ImHandler.HandlerGroupMessage:output_type -> im.MessageRes
	5,  // 15: im.ImServer.SendMsgToOne:output_type -> im.MessageRes
	9,  // 16: im.ImServer.SendMsgToGroup:output_type -> im.SendMsgToGroupRes
	5,  // 17: im.ImServer.SendMsgToAll:output_type -> im.MessageRes
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_idl_im_proto_init() }
func file_idl_im_proto_init() {
	if File_idl_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgTooneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgToGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgToGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_im_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_idl_im_proto_goTypes,
		DependencyIndexes: file_idl_im_proto_depIdxs,
		EnumInfos:         file_idl_im_proto_enumTypes,
		MessageInfos:      file_idl_im_proto_msgTypes,
	}.Build()
	File_idl_im_proto = out.File
	file_idl_im_proto_rawDesc = nil
	file_idl_im_proto_goTypes = nil
	file_idl_im_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.10.1. DO NOT EDIT.

type ImHandler interface {
	MetaMessage(ctx context.Context, req *MetaMsg) (res *MessageRes, err error)
	HandlerPrivateMessage(ctx context.Context, req *Message) (res *MessageRes, err error)
	HandlerGroupMessage(ctx context.Context, req *Message) (res *MessageRes, err error)
}

type ImServer interface {
	SendMsgToOne(ctx context.Context, req *SendMsgTooneReq) (res *MessageRes, err error)
	SendMsgToGroup(ctx context.Context, req *SendMsgToGroupReq) (res *SendMsgToGroupRes, err error)
	SendMsgToAll(ctx context.Context, req *Message) (res *MessageRes, err error)
}
