// Code generated by ent, DO NOT EDIT.

package ent

import (
	"imlogic/ent/group"
	"imlogic/ent/role"
	"imlogic/ent/schema"
	"imlogic/ent/user"
	"imlogic/ent/userconn"
	"imlogic/ent/userfriend"
	"imlogic/ent/usergroup"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescUUID is the schema descriptor for uuid field.
	groupDescUUID := groupFields[1].Descriptor()
	// group.DefaultUUID holds the default value on creation for the uuid field.
	group.DefaultUUID = groupDescUUID.Default.(func() string)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[2].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupFields[3].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[4].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreatedAt is the schema descriptor for created_at field.
	roleDescCreatedAt := roleFields[1].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the created_at field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescGroupID is the schema descriptor for group_id field.
	roleDescGroupID := roleFields[2].Descriptor()
	// role.DefaultGroupID holds the default value on creation for the group_id field.
	role.DefaultGroupID = roleDescGroupID.Default.(int64)
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[3].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescIntro is the schema descriptor for intro field.
	roleDescIntro := roleFields[4].Descriptor()
	// role.DefaultIntro holds the default value on creation for the intro field.
	role.DefaultIntro = roleDescIntro.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescDeleted is the schema descriptor for deleted field.
	userDescDeleted := userFields[3].Descriptor()
	// user.DefaultDeleted holds the default value on creation for the deleted field.
	user.DefaultDeleted = userDescDeleted.Default.(bool)
	// userDescUUID is the schema descriptor for uuid field.
	userDescUUID := userFields[4].Descriptor()
	// user.DefaultUUID holds the default value on creation for the uuid field.
	user.DefaultUUID = userDescUUID.Default.(func() string)
	// userDescEditor is the schema descriptor for editor field.
	userDescEditor := userFields[5].Descriptor()
	// user.DefaultEditor holds the default value on creation for the editor field.
	user.DefaultEditor = userDescEditor.Default.(int64)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[6].Descriptor()
	// user.DefaultUsername holds the default value on creation for the username field.
	user.DefaultUsername = userDescUsername.Default.(string)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[7].Descriptor()
	// user.DefaultPassword holds the default value on creation for the password field.
	user.DefaultPassword = userDescPassword.Default.(string)
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[8].Descriptor()
	// user.DefaultMobile holds the default value on creation for the mobile field.
	user.DefaultMobile = userDescMobile.Default.(string)
	// userDescAvatar is the schema descriptor for avatar field.
	userDescAvatar := userFields[9].Descriptor()
	// user.DefaultAvatar holds the default value on creation for the avatar field.
	user.DefaultAvatar = userDescAvatar.Default.(string)
	// userDescDesc is the schema descriptor for desc field.
	userDescDesc := userFields[10].Descriptor()
	// user.DefaultDesc holds the default value on creation for the desc field.
	user.DefaultDesc = userDescDesc.Default.(string)
	userconnFields := schema.UserConn{}.Fields()
	_ = userconnFields
	// userconnDescLinkTime is the schema descriptor for link_time field.
	userconnDescLinkTime := userconnFields[1].Descriptor()
	// userconn.DefaultLinkTime holds the default value on creation for the link_time field.
	userconn.DefaultLinkTime = userconnDescLinkTime.Default.(func() time.Time)
	// userconnDescHostIP is the schema descriptor for host_ip field.
	userconnDescHostIP := userconnFields[3].Descriptor()
	// userconn.DefaultHostIP holds the default value on creation for the host_ip field.
	userconn.DefaultHostIP = userconnDescHostIP.Default.(string)
	// userconnDescDevice is the schema descriptor for device field.
	userconnDescDevice := userconnFields[4].Descriptor()
	// userconn.DefaultDevice holds the default value on creation for the device field.
	userconn.DefaultDevice = userconnDescDevice.Default.(string)
	// userconnDescLastHeartbeatTime is the schema descriptor for last_heartbeat_time field.
	userconnDescLastHeartbeatTime := userconnFields[5].Descriptor()
	// userconn.DefaultLastHeartbeatTime holds the default value on creation for the last_heartbeat_time field.
	userconn.DefaultLastHeartbeatTime = userconnDescLastHeartbeatTime.Default.(func() time.Time)
	userfriendFields := schema.UserFriend{}.Fields()
	_ = userfriendFields
	// userfriendDescCreatedAt is the schema descriptor for created_at field.
	userfriendDescCreatedAt := userfriendFields[1].Descriptor()
	// userfriend.DefaultCreatedAt holds the default value on creation for the created_at field.
	userfriend.DefaultCreatedAt = userfriendDescCreatedAt.Default.(func() time.Time)
	// userfriendDescAgree is the schema descriptor for agree field.
	userfriendDescAgree := userfriendFields[4].Descriptor()
	// userfriend.DefaultAgree holds the default value on creation for the agree field.
	userfriend.DefaultAgree = userfriendDescAgree.Default.(bool)
	usergroupFields := schema.UserGroup{}.Fields()
	_ = usergroupFields
	// usergroupDescJoinAt is the schema descriptor for join_at field.
	usergroupDescJoinAt := usergroupFields[0].Descriptor()
	// usergroup.DefaultJoinAt holds the default value on creation for the join_at field.
	usergroup.DefaultJoinAt = usergroupDescJoinAt.Default.(func() time.Time)
}
