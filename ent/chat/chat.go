// Code generated by ent, DO NOT EDIT.

package chat

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the chat type in the database.
	Label = "chat"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUser1ID holds the string denoting the user1_id field in the database.
	FieldUser1ID = "user1_id"
	// FieldUser2ID holds the string denoting the user2_id field in the database.
	FieldUser2ID = "user2_id"
	// Table holds the table name of the chat in the database.
	Table = "chats"
)

// Columns holds all SQL columns for chat fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUser1ID,
	FieldUser2ID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the Chat queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUUID orders the results by the uuid field.
func ByUUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUUID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUser1ID orders the results by the user1_id field.
func ByUser1ID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUser1ID, opts...).ToFunc()
}

// ByUser2ID orders the results by the user2_id field.
func ByUser2ID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUser2ID, opts...).ToFunc()
}
