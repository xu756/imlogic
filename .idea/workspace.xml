<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e9f5b959-c9ff-4caf-8bcc-9ac7286a29f1" name="更改" comment="img">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/influxdb/msg.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/influxdb/msg.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Dockerfile" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/devenv/go" />
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoVcsConfiguration">
    <option name="GO_FMT" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2Yi0E14BX9ntX7nZLrFtUaQ86ER" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go 构建.go build github.com/xu756/imlogic/cmd/tool.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/cmd/im/server 中的 TestServerInit.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/cmd/im/server/handler 中的 TestInitRouter.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/common/cache 中的 TestClient_DelKey.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/common/cache 中的 TestClient_Keys.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/common/cache 中的 TestNewCacheClient.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/common/cache 中的 TestNewCacheGet.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/common/config 中的 Test.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.github.com/xu756/imlogic/common/influxdb 中的 TestConnect.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/xu756&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;sqlite&quot;,
      &quot;postgresql&quot;,
      &quot;redis&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/cmd" />
      <recent name="$PROJECT_DIR$/common/types" />
      <recent name="$PROJECT_DIR$/configs" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/deploy" />
    </key>
  </component>
  <component name="RunManager" selected="Go 测试.github.com/xu756/imlogic/common/influxdb 中的 TestConnect">
    <configuration name="go build github.com/xu756/imlogic/cmd/tool" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="imlogic" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xu756/imlogic/cmd/tool" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/tool/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xu756/imlogic/cmd/im/server/handler 中的 TestInitRouter" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="imlogic" />
      <working_directory value="$PROJECT_DIR$/cmd/im/server/handler" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xu756/imlogic/cmd/im/server/handler" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestInitRouter\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xu756/imlogic/common/cache 中的 TestClient_DelKey" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="imlogic" />
      <working_directory value="$PROJECT_DIR$/common/cache" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xu756/imlogic/common/cache" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestClient_DelKey\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xu756/imlogic/common/cache 中的 TestClient_Keys" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="imlogic" />
      <working_directory value="$PROJECT_DIR$/common/cache" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xu756/imlogic/common/cache" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestClient_Keys\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xu756/imlogic/common/influxdb 中的 TestConnect" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="imlogic" />
      <working_directory value="$PROJECT_DIR$/common/influxdb" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xu756/imlogic/common/influxdb" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestConnect\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 测试.github.com/xu756/imlogic/common/influxdb 中的 TestConnect" />
        <item itemvalue="Go 构建.go build github.com/xu756/imlogic/cmd/tool" />
        <item itemvalue="Go 测试.github.com/xu756/imlogic/cmd/im/server/handler 中的 TestInitRouter" />
        <item itemvalue="Go 测试.github.com/xu756/imlogic/common/cache 中的 TestClient_DelKey" />
        <item itemvalue="Go 测试.github.com/xu756/imlogic/common/cache 中的 TestClient_Keys" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-e58f7cfedaf7-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.14015.113" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="ws" />
    <MESSAGE value="coding conf" />
    <MESSAGE value="rename parms to params" />
    <MESSAGE value="CheckOrigin" />
    <MESSAGE value="remove gorm &amp;&amp; upgrade to ent" />
    <MESSAGE value="update ent" />
    <MESSAGE value="update go version to 1.22.0" />
    <MESSAGE value="update api struct" />
    <MESSAGE value="remove print" />
    <MESSAGE value="add redis config" />
    <MESSAGE value="update to stream" />
    <MESSAGE value="add Dockerfile" />
    <MESSAGE value="build" />
    <MESSAGE value="Dockerfile" />
    <MESSAGE value="Dockerfile build" />
    <MESSAGE value="config" />
    <MESSAGE value="upload" />
    <MESSAGE value="format" />
    <MESSAGE value="update" />
    <MESSAGE value="lock" />
    <MESSAGE value="im server ok" />
    <MESSAGE value="proto" />
    <MESSAGE value="ping tool" />
    <MESSAGE value="new" />
    <MESSAGE value="img" />
    <option name="LAST_COMMIT_MESSAGE" value="img" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>