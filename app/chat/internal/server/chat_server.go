// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package server

import (
	"context"
	pb2 "github.com/xu756/imlogic/internal/pb"

	"github.com/xu756/imlogic/app/chat/internal/logic"
	"github.com/xu756/imlogic/app/chat/internal/svc"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	pb2.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

// 元事件 连接 断开 状态更新 解密错误
func (s *ChatServer) Meta(ctx context.Context, in *pb2.ImMeta) (*pb2.MetaResp, error) {
	l := logic.NewMetaLogic(ctx, s.svcCtx)
	return l.Meta(in)
}

// im消息
func (s *ChatServer) Msg(ctx context.Context, in *pb2.Message) (*pb2.MsgResp, error) {
	l := logic.NewMsgLogic(ctx, s.svcCtx)
	return l.Msg(in)
}
